[{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-dart-seq.html","id":"an-example-on-dartseq","dir":"Articles","previous_headings":"","what":"An example on DARTseq","title":"Analysis of DART-seq with JACUSA2helper","text":"complementary genetic approach extension TRIBE technique called DART-seq Meyer (2019). Meyer applied DART-seq HEK293 cells APOBEC domain fused YTH domain human YTHDF2 (WT mutated). essence, new C--U editing events significantly enriched YTHDF2-WT, binding domain mutant bona fide candidates m6A RNA modification. JACUSA2helper supports analysis DARTseq data (see ). Input typically read via read_result. code sequence filters input include sites, call-2 score higher 2, coverage across replicates least 10. Moreover, number distinct base calls less equal 2 (preferably C U/T) base substitution visible replicates least one condition.","code":"data(\"DARTseq\") filtered <- DARTseq  # calculate number of unique base calls per site GenomicRanges::mcols(filtered)[[\"bc\"]] <- lapply(filtered$bases, Reduce, f = \"+\") %>%    Reduce(f=\"+\") %>%    base_count()  filtered <- filtered %>%   dplyr::filter(score >= 2) %>%   dplyr::filter(All(cov$cond1 >= 10) & All(cov$cond2 >= 10)) %>%   dplyr::filter(bc <= 2) %>%   dplyr::filter(robust(bases))"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-dart-seq.html","id":"some-basic-statistics-on-base-transitions-in-the-data","dir":"Articles","previous_headings":"An example on DARTseq","what":"Some basic statistics on base transitions in the data","title":"Analysis of DART-seq with JACUSA2helper","text":"following bar plot summarizes number sites characteristic base substitutions relative reference sequence. observe lot C--U transitions active YTH binding domain compared inactivated binding domain.","code":"# sum base call counts of condition / RNA replicates rna_bases <- Reduce(\"+\", filtered$bases$cond2)  # we don't need lapply_repl, because we don't operate on all replicates from all # conditions - only condition 2 / RNA ref2YTHmut <- base_sub(rna_bases, filtered$ref) table(ref2YTHmut) #> ref2YTHmut #>      A->C      A->G      A->T      C->A      C->G      C->T      G->A      G->C  #>         9        47         3         5         7      6243        51        12  #>      G->T no change      T->A      T->C      T->G  #>         3     12614         2        52         4 rnaref <- Reduce(\"+\", filtered$bases$cond1) ref2YTH <- base_sub(rnaref, filtered$ref) table(ref2YTH, ref2YTHmut) #>            ref2YTHmut #> ref2YTH      A->C  A->G  A->T  C->A  C->G  C->T  G->A  G->C  G->T no change #>   A->C          5     0     0     0     0     0     0     0     0         0 #>   A->CT         2     0     0     0     0     0     0     0     0         0 #>   A->G          0    44     0     0     0     0     0     0     0         6 #>   A->T          0     0     1     0     0     0     0     0     0         1 #>   C->A          0     0     0     4     0     0     0     0     0         0 #>   C->G          0     0     0     0     7     0     0     0     0         0 #>   C->T          0     0     0     0     0  5526     0     0     0     12577 #>   G->A          0     0     0     0     0     0    41     0     0        15 #>   G->C          0     0     0     0     0     0     0    12     0         0 #>   G->T          0     0     0     0     0     0     0     0     3         0 #>   no change     2     3     2     1     0   717    10     0     0         0 #>   T->A          0     0     0     0     0     0     0     0     0         1 #>   T->C          0     0     0     0     0     0     0     0     0        14 #>   T->G          0     0     0     0     0     0     0     0     0         0 #>            ref2YTHmut #> ref2YTH      T->A  T->C  T->G #>   A->C          0     0     0 #>   A->CT         0     0     0 #>   A->G          0     0     0 #>   A->T          0     0     0 #>   C->A          0     0     0 #>   C->G          0     0     0 #>   C->T          0     0     0 #>   G->A          0     0     0 #>   G->C          0     0     0 #>   G->T          0     0     0 #>   no change     0    14     0 #>   T->A          2     0     0 #>   T->C          0    38     0 #>   T->G          0     0     4 tidyr::tibble(   base_sub = c(ref2YTH, ref2YTHmut),    Source = c(     rep(\"YTH\",length(ref2YTH)),     rep(\"YTHmut\",length(ref2YTHmut)))   ) %>% # ggplot requires a data frame   ggplot2::ggplot(ggplot2::aes(x = base_sub, fill = Source)) +   ggplot2::geom_bar(position = \"dodge\") +    ggplot2::xlab(\"Base substitution\")  +   ggplot2::scale_fill_discrete(name = \"Base substitution\") +   ggplot2::theme(    legend.position = \"bottom\",     axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1)   )"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-dart-seq.html","id":"quantitative-assessment-of-tct-frequencies","dir":"Articles","previous_headings":"","what":"Quantitative assessment of T/(C+T) frequencies","title":"Analysis of DART-seq with JACUSA2helper","text":"following scatter plot summarizes T/(C+T) frequencies labels .","code":"tempo <- lapply_cond(   lapply_cond(filtered$bases, function(b) { Reduce(\"+\", b) } ),   base_ratio ) GenomicRanges::mcols(filtered)[[\"YTH.t.ratio\"]] <- tempo$cond1$T GenomicRanges::mcols(filtered)[[\"YTHmut.t.ratio\"]] <- tempo$cond2$T GenomicRanges::mcols(filtered)[[\"pred\"]] <- ifelse(   tempo$cond1$T > tempo$cond2$T,    \"Positives\",    \"Negatives\" ) GenomicRanges::mcols(filtered)[c(\"YTHmut.t.ratio\", \"YTH.t.ratio\", \"pred\")] %>%    as.data.frame() %>%   ggplot2::ggplot(ggplot2::aes(x=YTHmut.t.ratio, y=YTH.t.ratio, color=pred)) +      ggplot2::geom_point() +      ggplot2::xlab(\"Mutated YTH binding domain (T/(C+T))\") +      ggplot2::ylab(\"Active YTH binding domain (T/(C+T))\") +      ggplot2::scale_color_manual(values=c('#999999', '#E69F00'), name = \"\") +     ggplot2::annotate(geom=\"text\", x=0.8, y=0.25, label=\"Negatives\", color=\"#999999\", size=6) +      ggplot2::annotate(geom=\"text\", x=0.25, y=0.8, label=\"Positives\", color=\"#E69F00\", size=6) +      ggplot2::theme_classic() +   ggplot2::theme(legend.position = \"none\")"},{"path":[]},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-mazf.html","id":"pre-processing-mazf-data","dir":"Articles","previous_headings":"","what":"Pre-processing MazF data","title":"Analysis of m6A mapping by MazF with JACUSA2helper","text":"analysis need add bases(+2nt) downstream identified SNVs compare expected ACA motif. compiled Bash script adds bases downstream SNVs info field: add_seq.sh. need FASTA sequence used map reads matching FASTA index. Make sure bedtools awk installed. Download add_seq.sh Check index “.fai” exists, otherwise run: “samtools faidx ” ./add_seq.sh -j <JACUSA> -f <FASTA> > <PROCESSED> info column <PROCESSED> contain values : “seq=ACG”. first position corresponds position SNV. Position 2 3 downstream SNV.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-mazf.html","id":"filter-mazf-data","dir":"Articles","previous_headings":"","what":"Filter MazF data","title":"Analysis of m6A mapping by MazF with JACUSA2helper","text":"JACUSA2helper directly reads output JACUSA2 via read_result function. Make sure run read_result(..., unpack=True) make data stored within info field available. next step, apply filters pvalue, read coverage(cov), select robust events. means sites retained arrest event visible across replicates least one condition.","code":"# MazF_FTO results data(MazF_FTO) filtered <- MazF_FTO %>%    dplyr::filter(pvalue <= 0.05) %>%    dplyr::filter(All(cov$cond1 >= 10) & All(cov$cond2 >= 10)) %>%    dplyr::filter(robust(arrest))"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-mazf.html","id":"read-and-merge-sequence-motif-information-at-cleavage-site","dir":"Articles","previous_headings":"","what":"Read and merge sequence motif information at cleavage site","title":"Analysis of m6A mapping by MazF with JACUSA2helper","text":"data structure modified presence absence canonical cleavage side motif added (see also Figure 1D Piechotta et al. (2021)).","code":"filtered$ACA <- ifelse(filtered$seq == \"ACA\", \"yes\", \"no\")"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-mazf.html","id":"scatter-plot-of-average-arrest-rates","dir":"Articles","previous_headings":"","what":"Scatter plot of average arrest rates","title":"Analysis of m6A mapping by MazF with JACUSA2helper","text":"Arrest rates plotted depending presence absence ACA motif.","code":"# rearrange metadata -  calculate average arrest rate df <- data.frame(   cond1 = rowMeans(GenomicRanges::mcols(filtered)$arrest_rate$cond1),   cond2 = rowMeans(GenomicRanges::mcols(filtered)$arrest_rate$cond2),   ACA = GenomicRanges::mcols(filtered)$ACA )  # scatter plot df %>%   ggplot2::ggplot(ggplot2::aes(x = cond1, y = cond2, color = ACA)) +     ggplot2::geom_point() +    ggplot2::geom_abline(colour = \"red\") +   ggplot2::xlab(\"MazF and mock avg. read arrest\") +    ggplot2::ylab(\"MazF and FTO avg. read arrest\") +   ggplot2::labs(color=\"ACA motif\") +    ggplot2::facet_wrap(.~ACA)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-mazf.html","id":"box-plot-of-average-over-arrest-rates-and-significant-sites","dir":"Articles","previous_headings":"","what":"Box plot of average over arrest rates and significant sites","title":"Analysis of m6A mapping by MazF with JACUSA2helper","text":"","code":"# scatter plot reshape2::melt(df, variable = \"condition\", value.name = \"arrest_rate\") %>%   mutate(condition=recode(condition, cond1=\"MazF and mock\", cond2=\"MazF and FTO\")) %>%   ggplot2::ggplot(ggplot2::aes(x = condition, y = arrest_rate, color = ACA, line_type = condition)) +     ggplot2::geom_boxplot() +    ggplot2::xlab(\"samples\") +    ggplot2::ylab(\"avg. read arrest\") +   ggplot2::labs(color=\"ACA motif\") +    ggplot2::facet_wrap(.~ACA) #> Using ACA as id variables"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-mazf.html","id":"box-plot-of-arrest-rates-over-all-replicates","dir":"Articles","previous_headings":"","what":"Box plot of arrest rates over all replicates","title":"Analysis of m6A mapping by MazF with JACUSA2helper","text":"Arrest rates plotted depending presence absence ACA motif FTO mock treated HEK293 cells. (Corresponds Figure 1E Piechotta et al. (2021))","code":"toplot <- reshape2::melt(as.matrix(filtered$arrest_rate)) toplot$ACA <- rep(filtered$ACA, 6) colnames(toplot) <- c(\"Id\", \"sample\", \"arrest_rate\", \"ACA\")  # add informative labels toplot$sample <- gsub(\"cond1\", \"mock\", toplot$sample) toplot$sample <- gsub(\"cond2\", \"FTO\", toplot$sample) toplot$treatment <- gsub(\"\\\\.rep[0-9]+\", \"\", toplot$sample)  ggplot2::ggplot(toplot, ggplot2::aes(x = sample, y = arrest_rate, linetype=treatment, color=ACA)) +   ggplot2::geom_boxplot() +   ggplot2::ylab(\"arrest rate\") +   ggplot2::xlab(\"MazF\") +   ggplot2::labs(color=\"ACA motif\")"},{"path":[]},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-meta-conditions.html","id":"meta-condition","dir":"Articles","previous_headings":"","what":"Meta condition","title":"Introduction to meta conditions with JACUSA2helper","text":"JACUSA2helper supports analysis several related JACUSA2 result files via results <- read_results(files, meta_conds) meta_conds vector strings provides descriptive name file vector strings files. , use Zhou et al. (2018) data set, authors map RNA modification pseudouridine (\\(\\Psi\\)) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg). three data sets available JACUSA2helper via data(). Additionally, compiled combined data sets data(Zhou2018_call2) data(Zhou2018_rt_arrest) utilizes meta conditions. Note, data replicates!","code":"data(Zhou2018_rt_arrest) unique(Zhou2018_rt_arrest$meta_cond) #> [1] HIVRT    SIIIRTMn SIIIRTMg #> Levels: HIVRT SIIIRTMg SIIIRTMn"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-meta-conditions.html","id":"group-by-site-and-other","dir":"Articles","previous_headings":"Meta condition","what":"Group By Site (and other)","title":"Introduction to meta conditions with JACUSA2helper","text":"manipulating multi results object created read_results(), crucial distinguish following files analysis pipeline: results %>% ... functions() results %>% dplyr:group_by(results, meta_cond) %>% ... functions() first statement apply subsequent functions sites regardless meta condition last statement apply sites meta condition!","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-meta-conditions.html","id":"number-of-sites","dir":"Articles","previous_headings":"","what":"Number of sites","title":"Introduction to meta conditions with JACUSA2helper","text":"following statement determine number covered sites per contig meta condition: statement determine number covered sites per contig regardless meta condition:","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-meta-conditions.html","id":"filter","dir":"Articles","previous_headings":"","what":"Filter","title":"Introduction to meta conditions with JACUSA2helper","text":"Filter coverage regardless meta condition.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-meta-conditions.html","id":"plot","dir":"Articles","previous_headings":"","what":"Plot","title":"Introduction to meta conditions with JACUSA2helper","text":"First, add description data_desc conditions result object. data sets Zhou2018 layout way condition 1 2 correspond carbodiimide (+CMC) treatment control (-CMC), respectively. Next, define ggplot2 object allows merge legend different scales. Check combine legends details. brief, use colour represent cond(ition) linetype represent repl(icate) relate possible combinations descriptive labels.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper-meta-conditions.html","id":"pvalue-distribution","dir":"Articles","previous_headings":"Plot","what":"Pvalue distribution","title":"Introduction to meta conditions with JACUSA2helper","text":"Plot empirical cumulative distributions pvalues meta conditions.","code":""},{"path":[]},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"multi-site-and-new-features","dir":"Articles","previous_headings":"","what":"Multi site and new features","title":"Introduction to JACUSA2helper","text":"previously JACUSA1, site uniquely identified one line output coordinate columns: ‘contig’, ‘start’, ‘end’, ‘strand’, JACUSA2 features complex data structures store new features arrest positions arrest events, variant tagging, INDEL counts. Therefore, sites can now cover multiple lines output - check Section “Introduction” JACUSA2 manual details.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"variant-calling---data-rdd-rna-dna-differences","dir":"Articles","previous_headings":"","what":"Variant calling - Data: rdd (RNA-DNA-differences)","title":"Introduction to JACUSA2helper","text":"introduce basic verbs manipulating JAUCSA2 output, ’ll use JACUSA2helper:rdd. data set contains subset Piechotta et al. (2017) documented ?rdd. brief, sample data set consists 10.000 sites 1x DNA 2x stranded RNA sequencing libraries allow define RNA-DNA-differences (RDDs). Note rdd tibble - check tibble details. Use dplyr manipulate result object rdd. Check details dplyr plyranges.","code":"library(JACUSA2helper) data(rdd)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"structured-column","dir":"Articles","previous_headings":"Variant calling - Data: rdd (RNA-DNA-differences)","what":"Structured column","title":"Introduction to JACUSA2helper","text":"JACUSA2 features structured columns (nested tibbles) condition replicate specific data stored, e.g.: bases, cov, etc. Check structure column : access specific coverage information condition 2 use: summary, structured/nested columns hold: * data condition “condI” first level, * data replicate “repJ” second level. Coverage information condition 2 replicate 1 can accessed :","code":"str(rdd[, c(\"bases\", \"cov\")]) #> Formal class 'GRanges' [package \"GenomicRanges\"] with 7 slots #>   ..@ seqnames       :Formal class 'Rle' [package \"S4Vectors\"] with 4 slots #>   .. .. ..@ values         : Factor w/ 35 levels \"GL000194.1\",\"GL000195.1\",..: 1 2 3 4 5 6 7 8 9 10 ... #>   .. .. ..@ lengths        : int [1:35] 3 8 1 1 2 1 3 1 1 1 ... #>   .. .. ..@ elementMetadata: NULL #>   .. .. ..@ metadata       : list() #>   ..@ ranges         :Formal class 'IRanges' [package \"IRanges\"] with 6 slots #>   .. .. ..@ start          : int [1:10018] 11097 70341 80493 138153 143152 149424 149551 165531 46563 84583 ... #>   .. .. ..@ width          : int [1:10018] 1 1 1 1 1 1 1 1 1 1 ... #>   .. .. ..@ NAMES          : NULL #>   .. .. ..@ elementType    : chr \"ANY\" #>   .. .. ..@ elementMetadata: NULL #>   .. .. ..@ metadata       : list() #>   ..@ strand         :Formal class 'Rle' [package \"S4Vectors\"] with 4 slots #>   .. .. ..@ values         : Factor w/ 3 levels \"+\",\"-\",\"*\": 2 1 2 1 2 1 2 1 2 1 ... #>   .. .. ..@ lengths        : int [1:2868] 3 5 4 1 2 2 1 1 1 2 ... #>   .. .. ..@ elementMetadata: NULL #>   .. .. ..@ metadata       : list() #>   ..@ seqinfo        :Formal class 'Seqinfo' [package \"GenomeInfoDb\"] with 4 slots #>   .. .. ..@ seqnames   : chr [1:35] \"GL000194.1\" \"GL000195.1\" \"GL000214.1\" \"GL000216.1\" ... #>   .. .. ..@ seqlengths : int [1:35] NA NA NA NA NA NA NA NA NA NA ... #>   .. .. ..@ is_circular: logi [1:35] NA NA NA NA NA NA ... #>   .. .. ..@ genome     : chr [1:35] NA NA NA NA ... #>   ..@ elementMetadata:Formal class 'DFrame' [package \"S4Vectors\"] with 6 slots #>   .. .. ..@ rownames       : NULL #>   .. .. ..@ nrows          : int 10018 #>   .. .. ..@ elementType    : chr \"ANY\" #>   .. .. ..@ elementMetadata: NULL #>   .. .. ..@ metadata       : list() #>   .. .. ..@ listData       :List of 2 #>   .. .. .. ..$ bases: tibble [10,018 × 2] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. ..$ cond1: tibble [10,018 × 1] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. .. ..$ rep1: tibble [10,018 × 4] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. .. .. ..$ A: num [1:10018] 0 0 0 0 0 0 0 0 0 0 ... #>   .. .. .. .. .. .. ..$ C: num [1:10018] 0 8 2 0 0 0 0 0 0 0 ... #>   .. .. .. .. .. .. ..$ G: num [1:10018] 5 0 0 2 8 2 0 2 0 0 ... #>   .. .. .. .. .. .. ..$ T: num [1:10018] 0 0 0 0 0 0 3 0 7 32 ... #>   .. .. .. .. ..$ cond2: tibble [10,018 × 2] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. .. ..$ rep1: tibble [10,018 × 4] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. .. .. ..$ A: num [1:10018] 9 0 6 3 6 4 0 2 0 0 ... #>   .. .. .. .. .. .. ..$ C: num [1:10018] 0 0 0 0 0 0 2 0 3 0 ... #>   .. .. .. .. .. .. ..$ G: num [1:10018] 1 0 0 12 11 5 0 3 0 1 ... #>   .. .. .. .. .. .. ..$ T: num [1:10018] 0 5 0 0 0 0 0 0 2 16 ... #>   .. .. .. .. .. ..$ rep2: tibble [10,018 × 4] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. .. .. ..$ A: num [1:10018] 5 0 4 2 5 2 0 1 0 0 ... #>   .. .. .. .. .. .. ..$ C: num [1:10018] 0 0 0 0 0 0 1 0 1 0 ... #>   .. .. .. .. .. .. ..$ G: num [1:10018] 0 0 0 13 17 3 0 8 0 1 ... #>   .. .. .. .. .. .. ..$ T: num [1:10018] 0 6 0 0 0 0 1 0 1 19 ... #>   .. .. .. ..$ cov  : tibble [10,018 × 2] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. ..$ cond1: tibble [10,018 × 1] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. .. ..$ rep1: num [1:10018] 5 8 2 2 8 2 3 2 7 32 ... #>   .. .. .. .. ..$ cond2: tibble [10,018 × 2] (S3: tbl_df/tbl/data.frame) #>   .. .. .. .. .. ..$ rep1: num [1:10018] 10 5 6 15 17 9 2 5 5 17 ... #>   .. .. .. .. .. ..$ rep2: num [1:10018] 5 6 4 15 22 5 2 9 2 20 ... #>   ..@ elementType    : chr \"ANY\" #>   ..@ metadata       : list() #>   ..$ JACUSA2.type  : chr \"call-pileup\" #>   ..$ JACUSA2.header: chr \" JACUSA2 Version: 2.0.0 call-2 -a D,Y -c 2 -P2 RF_FIRSTSTRAND -p 4 -r untr_hek293_rdds.out gDNA-rdds.bam untr-1\"| __truncated__ names(rdd$cov) #> [1] \"cond1\" \"cond2\" str(rdd$cov$cond2) #> tibble [10,018 × 2] (S3: tbl_df/tbl/data.frame) #>  $ rep1: num [1:10018] 10 5 6 15 17 9 2 5 5 17 ... #>  $ rep2: num [1:10018] 5 6 4 15 22 5 2 9 2 20 ... str(rdd$cov$cond2$rep1) #>  num [1:10018] 10 5 6 15 17 9 2 5 5 17 ..."},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"wrapper-for-lapply-and-mapply","dir":"Articles","previous_headings":"Variant calling - Data: rdd (RNA-DNA-differences) > Structured column","what":"Wrapper for lapply() and mapply()","title":"Introduction to JACUSA2helper","text":"accessing manipulating structured columns JACUSA2 specific wrappers lapply() mapply(): * lapply_cond(x, f) operates condition data (list replicate data), * lapply_repl(x, f) operates replicate data condition, * mapply_repl(f, ...) operates replicate data, takes multiple inputs. get total coverage condition use: following gives observed base calls:","code":"lapply_cond(rdd$cov, rowSums) #> # A tibble: 10,018 × 2 #>   cond1 cond2 #>   <dbl> <dbl> #> 1     5    15 #> 2     8    11 #> 3     2    10 #> 4     2    30 #> # … with 10,014 more rows base_calls <- lapply_repl(rdd$bases, base_call) base_calls$cond2 #> # A tibble: 10,018 × 2 #>   rep1  rep2  #>   <chr> <chr> #> 1 AG    A     #> 2 T     T     #> 3 A     A     #> 4 AG    AG    #> # … with 10,014 more rows"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"filtering-with-dplyrfilter","dir":"Articles","previous_headings":"Variant calling - Data: rdd (RNA-DNA-differences)","what":"Filtering with dplyr::filter()","title":"Introduction to JACUSA2helper","text":"dplyr %>% magrittr allow formulate compact analysis pipelines. first step, retain sites score >= 2. order formulate complicate statements dplyr::filter() featuring arbitrary combinations conditions /replicates use following convenience functions: * () * (). following statement retains sites replicates condition 1 coverage >= 50 least one replicate condition 2 10 reads: following, : remove sites score < 2, retain sites coverage >= 10 replicates, remove sites > 2 observed bases (excluding reference base), apply filter retains robust sites (RNA editing must present /replicates), Finally, compute base substitution (RNA editing sites FASTA reference) per replicate. Instead using DNA information reference FASTA sequence via column “ref”, use actual data condition 1 / DNA. Robust requires observations (base calls) present replicates least condition. Using different sources DNA describe RRDs via ref2rna dna2rna can conclude polymorphic positions filtered ref2rna dna2rna identical.","code":"# before filtering length(rdd) #> [1] 10018 result <- dplyr::filter(rdd, score >= 2) print(\"After filtering\") #> [1] \"After filtering\" # after filtering length(result) #> [1] 1733 rdd %>%    dplyr::filter(All(cov$cond1 >= 50) & Any(cov$cond2 >= 10)) #> GRanges object with 782 ranges and 16 metadata columns: #>           seqnames    ranges strand |        name     score        info #>              <Rle> <IRanges>  <Rle> | <character> <numeric> <character> #>     [1] GL000220.1    118145      + |      call-2  4.616875           * #>     [2] GL000220.1    118232      + |      call-2  1.139760           * #>     [3]         MT      1090      + |      call-2  0.998387           * #>     [4]         MT     11046      + |      call-2  0.687081           * #>     [5]         MT     12832      + |      call-2  0.680235           * #>     ...        ...       ...    ... .         ...       ...         ... #>   [778]         22  42032758      + |      call-2  0.755940           * #>   [779]         22  42070810      - |      call-2  0.871558           * #>   [780]         22  42959104      - |      call-2  1.293616           * #>   [781]         22  43015144      - |      call-2  0.865697           * #>   [782]         22  43023675      - |      call-2  0.936470           * #>              filter         ref                                  bases #>         <character> <character>                               <tbl_df> #>     [1]         D;Y           C    0:101:0:...: 0:16:3:...: 0:20:4:... #>     [2]           D           T    0:  0:0:...: 0: 2:0:...: 0: 1:0:... #>     [3]           D           A 7586:  0:0:...:27: 0:1:...:28: 0:1:... #>     [4]           D           T    0:  0:0:...: 0: 0:1:...: 0: 0:1:... #>     [5]           D           A 8328:  0:0:...:83: 0:1:...:89: 0:1:... #>     ...         ...         ...                                    ... #>   [778]           D           T        0:0:0:...: 1:0:0:...: 1:0:0:... #>   [779]           D           T        0:0:0:...: 1:0:0:...: 1:0:0:... #>   [780]           *           A       50:0:0:...:10:0:1:...: 2:0:1:... #>   [781]           D           A       58:0:0:...:47:0:1:...:44:0:1:... #>   [782]           D           T        0:0:0:...: 0:0:1:...: 0:0:1:... #>                   cov         seq      reset1      reset2      resetP #>              <tbl_df> <character> <character> <character> <character> #>     [1]   101: 19: 24                    <NA>        <NA>        <NA> #>     [2]    76:101:101                    <NA>        <NA>        <NA> #>     [3]  7586: 28: 29                    <NA>        <NA>        <NA> #>     [4] 16219: 85: 86                    <NA>        <NA>        <NA> #>     [5]  8328: 84: 90                    <NA>        <NA>        <NA> #>     ...           ...         ...         ...         ...         ... #>   [778]      65:69:67                    <NA>        <NA>        <NA> #>   [779]      50:46:45                    <NA>        <NA>        <NA> #>   [780]      50:11: 3                    <NA>        <NA>        <NA> #>   [781]      58:48:45                    <NA>        <NA>        <NA> #>   [782]      51:38:34                    <NA>        <NA>        <NA> #>          backtrack1  backtrack2  backtrackP         ins         del #>         <character> <character> <character>    <tbl_df>    <tbl_df> #>     [1]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>     [2]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>     [3]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>     [4]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>     [5]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>     ...         ...         ...         ...         ...         ... #>   [778]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>   [779]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>   [780]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>   [781]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>   [782]        <NA>        <NA>        <NA> 0:0:0:0:0:0 0:0:0:0:0:0 #>   ------- #>   seqinfo: 35 sequences from an unspecified genome; no seqlengths filtered <- rdd filtered$bc <- lapply_cond(filtered$bases, function(b) { Reduce(\"+\", b) } ) %>% Reduce(\"+\", .) %>% base_count()  filtered <- filtered %>%   dplyr::filter(score >= 2) %>%   dplyr::filter(All(cov$cond1 >= 10) & All(cov$cond2 > 10)) %>%   dplyr::filter(bc <= 2) %>%   dplyr::filter(robust(bases))  # sum base call counts of condition / RNA replicates rna_bases <- Reduce(\"+\", filtered$bases$cond2)  # we don't need lapply_repl, because we don't operate on all replicate from all # conditions - only condition 2 / RNA ref2rna <- base_sub(rna_bases, filtered$ref) table(ref2rna) #> ref2rna #> A->C A->G A->T C->A C->G C->T G->A G->C G->T T->A T->C T->G  #>    6  171    2    3    2    9   23    6    1    5   15    3 cond1_ref <- base_call(filtered$bases$cond1$rep1) dna2rna <- base_sub(rna_bases, filtered$ref) table(dna2rna) #> dna2rna #> A->C A->G A->T C->A C->G C->T G->A G->C G->T T->A T->C T->G  #>    6  171    2    3    2    9   23    6    1    5   15    3"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"plot-base-substitutions","dir":"Articles","previous_headings":"Variant calling - Data: rdd (RNA-DNA-differences)","what":"Plot base substitutions","title":"Introduction to JACUSA2helper","text":"can now plot site specific distribution base substitutions using ggplot2 :","code":"tidyr::tibble(base_sub = dna2rna) %>% # ggplot requires a data frame   ggplot2::ggplot(ggplot2::aes(x = base_sub, fill = base_sub)) +   ggplot2::geom_bar() +   ggplot2::xlab(\"Base substitution\")  +   ggplot2::theme(    legend.position = \"none\",     axis.text.x = ggplot2::element_text(angle = 90, vjust = 0.5, hjust=1)   )"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"plot-coverage-distribution","dir":"Articles","previous_headings":"Variant calling - Data: rdd (RNA-DNA-differences)","what":"Plot coverage distribution","title":"Introduction to JACUSA2helper","text":"compare coverage distribution data sample, create simple plot empirical coverage distribution, map cond(ition) colour repl(icate) linetype. –> order improve preliminary plot, need modify following aspects: Merge legends, add descriptive plot labels (x = Coverage, y = Density), add descriptive data description - cond(ition) 1 2, finally logarithmize cov(erage). First, data description added result object: Supplementary data limits labels created enable sleek legend relating cond(ition) repl(icate) data description. mapped colour linetype. Finally, combine previous snippets arrive final plot:  plot, can deduce RNA samples similar coverage distribution higher covered DNA data sample. code serves blueprint plots, e.g.: empirical cumulative distribution arrest rate number observed bases.","code":"gather_repl(result, \"cov\") %>%   ggplot2::ggplot(ggplot2::aes(x = value, colour = cond, linetype = repl)) +      ggplot2::stat_ecdf(geom = \"step\") +     ggplot2::xlab(\"Coverage\") result <- gather_repl(rdd, \"cov\") %>%   dplyr::mutate(     data_desc = dplyr::case_when(       cond == \"cond1\" ~ \"DNA\",       cond == \"cond2\" & repl == \"rep1\" ~ \"RNA 1\",       cond == \"cond2\" & repl == \"rep2\" ~ \"RNA 2\"     )   ) # grouping enables nice legends in plot result$group <- do.call(interaction, result[c(\"cond\", \"repl\")]) # relate group={cond(ition), repl(icat)}, and nice label meta_desc <- dplyr::distinct(result, cond, repl, group, data_desc) # map group values to nice labels (data_desc) limits <- as.vector(meta_desc[[\"group\"]]) labels <- meta_desc[[\"data_desc\"]] name <- \"Data description\" result %>%    ggplot2::ggplot(ggplot2::aes(x = value, colour = group, linetype = group)) +   # map values for cond to colour and use nice labels   ggplot2::scale_colour_manual(     name = name,     labels = labels,     limits = limits,     values = factor(meta_desc[[\"cond\"]]) %>% as.integer()   ) +   # map values for repl to colour and use nice labels   ggplot2::scale_linetype_manual(     name = name,     labels = labels,     limits = limits,     values = factor(meta_desc[[\"repl\"]]) %>% as.integer()   ) +   ggplot2::stat_ecdf(geom = \"step\") +   # theming and xy labels   ggplot2::ylab(\"Density\") +   # logarithmize and nice x-axis   ggplot2::scale_x_log10(     breaks = scales::trans_breaks(\"log10\", function(x) 10^x),     labels = scales::trans_format(\"log10\", scales::math_format(10^.x))   ) +   ggplot2::xlab(\"Coverage\") +   ggplot2::theme(legend.position = \"bottom\")"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"arrest-events","dir":"Articles","previous_headings":"","what":"Arrest events","title":"Introduction to JACUSA2helper","text":"Zhou et al. (2018) authors map RNA modification pseudouridine (\\(\\Psi\\)) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions: HIVRT, SIIIRTMn, SIIIRTMg. result JACUSA2 available using data(). Read JACUSA2 manual details data processed original publication Zhou et al. (2018). brief, data filtered contain following rRNAs: RNA18SN5, RNA28SN5, RNA5-8SN5. following, looking results data(HIVRT_rt_arrest). default JACUSA2 output rt-arrest contain following structured/nested columns: arrest bases = arrest + : total base counts. arrest_rate cov holds coverage total base counts. investigate strand specific coverage distribution reads discover reads mapped “+” strand. mappings probably artefacts. discussion beyond scope vignette.  filter pvalue, coverage, strand, retain robust arrest events: use gather_repl() function transform filtered result object plot arrest rate condition scatter plot.  plot, can deduce arrest rate higher +CMC condition rRNAs compared -CMC. want look simultaneously conditions (HIVRT, SIIIRTMn, SIIIRTMg), checkout vignette(\"JACUSA2helper-meta-conditions\").","code":"data(\"HIVRT_rt_arrest\") HIVRT_rt_arrest$id <- JACUSA2helper::id(HIVRT_rt_arrest) # column names of arrest data names(GenomicRanges::mcols(HIVRT_rt_arrest)) #>  [1] \"name\"         \"pvalue\"       \"info\"         \"filter\"       \"ref\"          #>  [6] \"arrest\"       \"through\"      \"bases\"        \"arrest_rate\"  \"cov\"          #> [11] \"seq\"          \"arrest_score\" \"reset1\"       \"reset2\"       \"resetP\"       #> [16] \"backtrack1\"   \"backtrack2\"   \"backtrackP\"   \"ins\"          \"del\"          #> [21] \"id\" position <- dplyr::select(HIVRT_rt_arrest, id, seqnames, strand, .drop_ranges = TRUE) %>% dplyr::as_tibble() coverage <- gather_repl(HIVRT_rt_arrest, \"cov\")  dplyr::inner_join(position, coverage, by = \"id\") %>% ggplot2::ggplot(ggplot2::aes(x = value, colour = strand)) +    ggplot2::geom_density() + ggplot2::scale_x_log10(     breaks = scales::trans_breaks(\"log10\", function(x) 10^x),     labels = scales::trans_format(\"log10\", scales::math_format(10^.x))   ) + ggplot2::xlab(\"Coverage\") + ggplot2::theme(legend.position = \"bottom\") +  ggplot2::facet_grid(seqnames ~ .) length(HIVRT_rt_arrest) #> [1] 12110 filtered <- HIVRT_rt_arrest %>%    dplyr::filter(strand == \"+\") %>%   dplyr::filter(pvalue <= 0.01) %>%    dplyr::filter(robust(arrest)) length(filtered) #> [1] 1204 df <- data.frame(   contig = seqnames(filtered),   arrest_rate1 = filtered$arrest_rate$cond1$rep1,   arrest_rate2 = filtered$arrest_rate$cond2$rep1 ) df %>%   ggplot2::ggplot(ggplot2::aes(x = log2(arrest_rate1), y = log2(arrest_rate2))) +     ggplot2::geom_point() +    ggplot2::facet_grid(. ~ contig) +    ggplot2::geom_abline(colour = \"red\") +   ggplot2::xlab(\"log2(+CMC arrest rate)\") +    ggplot2::ylab(\"log2(-CMC arrest rate)\")"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"stranded-data","dir":"Articles","previous_headings":"","what":"Stranded data","title":"Introduction to JACUSA2helper","text":"working stranded RNA-Seq data, inverting base calls necessary JACUSA2 automatically invert Single End (SE) Paired End (PE) depending provided library type option “-P” UNSTRANDED|FR_FIRSTSTRAND|RF_SECONDSTRAND”.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"inputoutput","dir":"Articles","previous_headings":"","what":"Input/Output","title":"Introduction to JACUSA2helper","text":"two functions read JACUSA2 output read_result(file) read_results(files, meta_conds) explained vignette(\"JACUSA2helper-meta-conditions\"). Use result <- read_result(\"JACUSA2.\") read create JACUSA2 result object JACUSA2 output file JACUSA2.. default, variables stored info column processed unpacked making available manipulation. Summary input/output methods: read_result() Reads unpacks JACUSA2 result file creates result object. read_results() Allows combine multiple result files distinguish meta conditions. write_bedGraph() Writes vector values bedGraph file.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"general-function-layout","dir":"Articles","previous_headings":"","what":"General function layout","title":"Introduction to JACUSA2helper","text":"following core functions JACUSA2helper presented. Check respective help page, e.g.: ?bc_ratio get details. arrest_rate Calculate arrest rate arrest reads. base_call Calculates observed bases base counts. base_ratio Calculates ratio matrix base count matrix. coverage Calculates coverage base counts. cases called automatically read_result() non_ref_ratio Calculates non reference base ratio base counts base type. base_sub Calculates base substitution reference base counts, e.g.: ->G. sub_ratio Calculates base substitution ratio reference observed bases, e.g.: 25% ->G.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"filter-result-object","dir":"Articles","previous_headings":"","what":"Filter result object","title":"Introduction to JACUSA2helper","text":"robust() filter_artefact() (), ()","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/articles/JACUSA2helper.html","id":"variant-tagging","dir":"Articles","previous_headings":"","what":"Variant tagging","title":"Introduction to JACUSA2helper","text":"Variant tagging allows group data based base substitutions reads, called tags. Running JACUSA2 -B \"A2G\" tag reads “->G” base substitution. available, observations site (=contig, start, stop, strand) tagged reads provided distinguished “tag=A2G” “tag=*” info column, respectively. Use result$tag <- clean_tag(result$tag) convert base substitutions “A2G” “->G”.","code":""},{"path":[]},{"path":"https://dieterich-lab.github.io/JACUSA2helper/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":"Michael Piechotta. Author, maintainer. Qi Wang. Contributor. Christoph Dieterich. Contributor. Dieterich Lab. Funder.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Piechotta M (2023). JACUSA2helper: Post-processing JACUSA2 output. https://github.com/dieterich-lab/JACUSA2helper, https://dieterich-lab.github.io/JACUSA2helper/.","code":"@Manual{,   title = {JACUSA2helper: Post-processing for JACUSA2 output},   author = {Michael Piechotta},   year = {2023},   note = {https://github.com/dieterich-lab/JACUSA2helper, https://dieterich-lab.github.io/JACUSA2helper/}, }"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/index.html","id":"overview","dir":"","previous_headings":"","what":"Post-processing for JACUSA2 output","title":"Post-processing for JACUSA2 output","text":"Auxiliary R package assessment JACUSA1.x JACUSA2.x results.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/index.html","id":"install","dir":"","previous_headings":"","what":"Install","title":"Post-processing for JACUSA2 output","text":"Install JACUSA2helper either downloading specific release install directly repository via devtools.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/index.html","id":"devtools-local","dir":"","previous_headings":"Install","what":"devtools (local)","title":"Post-processing for JACUSA2 output","text":"Make sure, devtools installed Download JACUSA2helper releases Change directory JACUSA2helper saved Start R Install downloaded package running: devtools::install_local(\"<DOWNLOADED-FILE>\", dependencies = TRUE, build_vignettes = TRUE)","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/index.html","id":"devtools-github","dir":"","previous_headings":"Install","what":"devtools (github)","title":"Post-processing for JACUSA2 output","text":"Make sure, devtools installed Start R Run install_github(\"dieterich-lab/JACUSA2helper\", dependencies = TRUE, build_vignettes = TRUE)","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/index.html","id":"documentation","dir":"","previous_headings":"","what":"Documentation","title":"Post-processing for JACUSA2 output","text":"Check vignettes: vignettes code examples run, try add library(plyranges) vignette(\"Introduction JACUSA2helper\") vignette(\"Analysis DART-seq JACUSA2helper\") vignette(\"Analysis m6A mapping MazF JACUSA2helper\") vignette(\"Introduction meta conditions JACUSA2helper\") Nanopore analysis","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/All.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge tibbles with columns holding logical values with AND to a vector. — All","title":"Merge tibbles with columns holding logical values with AND to a vector. — All","text":"column holding values logicals merged row-wise .","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/All.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge tibbles with columns holding logical values with AND to a vector. — All","text":"","code":"All(d)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/All.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge tibbles with columns holding logical values with AND to a vector. — All","text":"d tibble logical values","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/All.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge tibbles with columns holding logical values with AND to a vector. — All","text":"logical tibble columns merged .","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Allnum.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge tibbles with columns holding the sum of numeric values of a vector. — Allnum","title":"Merge tibbles with columns holding the sum of numeric values of a vector. — Allnum","text":"column holding values numbers summed row-wise.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Allnum.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge tibbles with columns holding the sum of numeric values of a vector. — Allnum","text":"","code":"Allnum(d)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Allnum.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge tibbles with columns holding the sum of numeric values of a vector. — Allnum","text":"d tibble numeric values","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Allnum.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge tibbles with columns holding the sum of numeric values of a vector. — Allnum","text":"numeric tibble summed columns.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Any.html","id":null,"dir":"Reference","previous_headings":"","what":"Merge tibbles with columns holding logical values with OR to a vector. — Any","title":"Merge tibbles with columns holding logical values with OR to a vector. — Any","text":"column holding values logicals merged row-wise .","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Any.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merge tibbles with columns holding logical values with OR to a vector. — Any","text":"","code":"Any(d)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Any.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merge tibbles with columns holding logical values with OR to a vector. — Any","text":"d tibble logical values","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Any.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merge tibbles with columns holding logical values with OR to a vector. — Any","text":"logical tibble columns merged .","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/DARTseq.html","id":null,"dir":"Reference","previous_headings":"","what":"DART-seq from Meyer 2019 — DARTseq","title":"DART-seq from Meyer 2019 — DARTseq","text":"complementary genetic approach extension TRIBE technique called DART-seq Meyer 2019. Beyer applied DART-seq HEK293 cells APOBEC domain fused YTH domain human YTHDF2 (WT mutated). essence, new C--U editing events significantly enriched YTHDF2-WT,  binding domain mutant bona fide candidates m6A RNA modification","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/DARTseq.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"DART-seq from Meyer 2019 — DARTseq","text":"","code":"data(DARTseq)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/DARTseq.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"DART-seq from Meyer 2019 — DARTseq","text":"tibble 18 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 score: Numeric value representing test-statistc. Higher values indicate divergent pileups strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/DARTseq.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"DART-seq from Meyer 2019 — DARTseq","text":"Meyer, Kate D., Nature methods, December 19, 2019","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_call2.html","id":null,"dir":"Reference","previous_headings":"","what":"JACUSA2 output for call-2 on HIVRT condition in Zhou et. al 2018 data — HIVRT_call2","title":"JACUSA2 output for call-2 on HIVRT condition in Zhou et. al 2018 data — HIVRT_call2","text":"Zhou2018 et al. 2018 map RNA modification pseudouridine \\(\\Psi\\) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg).  Result running JACUSA2 call-2 processed pairwise +CMC -CMC(control) data HIVRT condition presented.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_call2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JACUSA2 output for call-2 on HIVRT condition in Zhou et. al 2018 data — HIVRT_call2","text":"","code":"data(HIVRT_call2)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_call2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JACUSA2 output for call-2 on HIVRT condition in Zhou et. al 2018 data — HIVRT_call2","text":"tibble 18 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 score: Numeric value representing test-statistc. Higher values indicate divergent pileups strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_call2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JACUSA2 output for call-2 on HIVRT condition in Zhou et. al 2018 data — HIVRT_call2","text":"Check Section \"Reverse transcriptase arrest events\"  https://github.com/dieterich-lab/JACUSA2/blob/master/manual/manual.pdf details pre-processing mapping primary sequencing data.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_call2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JACUSA2 output for call-2 on HIVRT condition in Zhou et. al 2018 data — HIVRT_call2","text":"Zhou, K. .; Clark, W. C.; Pan, D. W.; Eckwahl, M. J.; Dai, Q. & Pan, T. Pseudouridines context-dependent mutation stop rates high-throughput sequencing  RNA Biology, Informa UK Limited, 2018 , 15 , 892-900","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_rt_arrest.html","id":null,"dir":"Reference","previous_headings":"","what":"JACUSA2 output for rt-arrest on HIVRT condition in Zhou et. al 2018 data — HIVRT_rt_arrest","title":"JACUSA2 output for rt-arrest on HIVRT condition in Zhou et. al 2018 data — HIVRT_rt_arrest","text":"Zhou2018 et al. 2018 map RNA modification pseudouridine \\(\\Psi\\) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg).  Result running JACUSA2 rt-arrest processed pairwise +CMC -CMC(control) data HIVRT condition presented.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_rt_arrest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JACUSA2 output for rt-arrest on HIVRT condition in Zhou et. al 2018 data — HIVRT_rt_arrest","text":"","code":"data(HIVRT_rt_arrest)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_rt_arrest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JACUSA2 output for rt-arrest on HIVRT condition in Zhou et. al 2018 data — HIVRT_rt_arrest","text":"tibble 22 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 pvalue: Numeric value representing pvalue test. strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) arrest: Numeric tibble representing counts , C, G, T base calls arrest reads. : Numeric tibble representing counts , C, G, T base calls reads. bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site arrest_rate: Numeric tibble representing arrest rate sample. arrest_score: Numeric - test-statistic score. backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_rt_arrest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JACUSA2 output for rt-arrest on HIVRT condition in Zhou et. al 2018 data — HIVRT_rt_arrest","text":"Check Section \"Reverse transcriptase arrest events\"  https://github.com/dieterich-lab/JACUSA2/blob/master/manual/manual.pdf details pre-processing mapping primary sequencing data.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/HIVRT_rt_arrest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JACUSA2 output for rt-arrest on HIVRT condition in Zhou et. al 2018 data — HIVRT_rt_arrest","text":"Zhou, K. .; Clark, W. C.; Pan, D. W.; Eckwahl, M. J.; Dai, Q. & Pan, T. Pseudouridines context-dependent mutation stop rates high-throughput sequencing  RNA Biology, Informa UK Limited, 2018 , 15 , 892-900","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/JACUSA2helper.html","id":null,"dir":"Reference","previous_headings":"","what":"JACUSA2helper: A package for post-processing JACUSA2 result files. — JACUSA2helper","title":"JACUSA2helper: A package for post-processing JACUSA2 result files. — JACUSA2helper","text":"Auxiliary R package assessment JACUSA1.x JACUSA2.x results.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/JACUSA2helper.html","id":"description","dir":"Reference","previous_headings":"","what":"Description","title":"JACUSA2helper: A package for post-processing JACUSA2 result files. — JACUSA2helper","text":"package provides functions post-process result files JACUSA2. following methods JACUSA2 supported: call1,2 calling variants one condition comparison conditions. pileup SAMtools like pileup. rt-arrest identification transcription arrest events. lrt-arrest combination variant discovery read arrest events. One major new feature JACUSA2 identification read arrest events.  method, vector base call partitioned read arrest read bases. working stranded RNA-Seq data, inverting base calls necessary JACUSA2 automatically invert Single End (SE) Paired End (PE) depending provided library type option \"-P\" UNSTRANDED|FR_FIRSTSTRAND|RF_SECONDSTRAND\". central data structure JACUSA2helper JACUSA2 result object follows  tidy data approach feature easy interaction dplyr ggplot2. JACUSA2 result object can created via result <- read_result(\"jacusa2.\")  currently represented tibble. Special structured columns exist  hold condition andn replicate related data : coverage, bases. arrest rate. Furthermore, JACUSA2helper supports analysis several related  JACUSA2  result files via results <- read_results(files, meta_cond)  meta_cond vector character strings provides descriptive  name file files. Check vignette(\"JACUSA2helper\", \"JACUSA2helper\") general  introduction \"JACUSA2helper\", \"JACUSA2helper\" details  meta conditions.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/JACUSA2helper.html","id":"read-write-functions","dir":"Reference","previous_headings":"","what":"read/write functions","title":"JACUSA2helper: A package for post-processing JACUSA2 result files. — JACUSA2helper","text":"See: read_result Reads unpacks JACUSA2 result file. read_results Allows combine multiple result files distinguish meta conditions. write_bedGraph Writes vector values bedGraph file.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/JACUSA2helper.html","id":"helper-functions","dir":"Reference","previous_headings":"","what":"Helper functions","title":"JACUSA2helper: A package for post-processing JACUSA2 result files. — JACUSA2helper","text":"See: arrest_rate Calculates arrest rate base call counts (arest, ). base_count Calculates bumber observed base calls. base_sub Calculates base substitution. base_ratio Calculates base call ratios. non_ref_ratio Calculates non reference base ratio JACUSA2 result object. sub_ratio Calculates base substitution ratio bases JACUSA2 result object.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/JACUSA2helper.html","id":"filter-functions","dir":"Reference","previous_headings":"","what":"filter functions","title":"JACUSA2helper: A package for post-processing JACUSA2 result files. — JACUSA2helper","text":"function set enables filtering read coverage enforcing minimal  number variant base calls per sample. See: robust Retains sites robust one feature. feature can observed replicates least one condition. filter_artefact Remove sites marked artefact. Helper function Helper function lapply_cond lapply wrapper - applies function conditions. lapply_repl lapply wrapper - applies function replicates. mapply_repl mapply wrapper - applies function replicates.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/MazF_FTO.html","id":null,"dir":"Reference","previous_headings":"","what":"MazF_FTO from Zhang et al. 2019 — MazF_FTO","title":"MazF_FTO from Zhang et al. 2019 — MazF_FTO","text":"following, use rt-arrest function applied MazF digestion assay Zhang et al. 2019. Herein, 3 replicates HEK293 mRNA treated FTO mock treated subjected MazF digestion assay.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/MazF_FTO.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"MazF_FTO from Zhang et al. 2019 — MazF_FTO","text":"","code":"data(MazF_FTO)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/MazF_FTO.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"MazF_FTO from Zhang et al. 2019 — MazF_FTO","text":"tibble 22 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 pvalue: Numeric value representing pvalue test. strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) arrest: Numeric tibble representing counts , C, G, T base calls arrest reads. : Numeric tibble representing counts , C, G, T base calls reads. bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site arrest_rate: Numeric tibble representing arrest rate sample. arrest_score: Numeric - test-statistic score. backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/MazF_FTO.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"MazF_FTO from Zhang et al. 2019 — MazF_FTO","text":"Zhang, Zhang Chen, Li-Qian Zhao, Yu-Li Yang,              Cai-Guang Roundtree, Ian . Zhang, Zijie Ren, Jian              Xie, Wei , Chuan Luo, Guan-Zheng             Science advances, July 5, 2019","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_call2.html","id":null,"dir":"Reference","previous_headings":"","what":"JACUSA2 output for call-22 on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_call2","title":"JACUSA2 output for call-22 on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_call2","text":"Zhou2018 et al. 2018 map RNA modification pseudouridine \\(\\Psi\\) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg).  Result running JACUSA2 call-2 processed pairwise +CMC -CMC(control) data SIIIRTMg condition presented.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_call2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JACUSA2 output for call-22 on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_call2","text":"","code":"data(SIIIRTMg_call2)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_call2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JACUSA2 output for call-22 on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_call2","text":"tibble 18 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 score: Numeric value representing test-statistc. Higher values indicate divergent pileups strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_call2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JACUSA2 output for call-22 on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_call2","text":"Check Section \"Reverse transcriptase arrest events\"  https://github.com/dieterich-lab/JACUSA2/blob/master/manual/manual.pdf details pre-processing mapping primary sequencing data.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_call2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JACUSA2 output for call-22 on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_call2","text":"Zhou, K. .; Clark, W. C.; Pan, D. W.; Eckwahl, M. J.; Dai, Q. & Pan, T. Pseudouridines context-dependent mutation stop rates high-throughput sequencing  RNA Biology, Informa UK Limited, 2018 , 15 , 892-900","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_rt_arrest.html","id":null,"dir":"Reference","previous_headings":"","what":"JACUSA2 output for rt-arrest on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_rt_arrest","title":"JACUSA2 output for rt-arrest on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_rt_arrest","text":"Zhou2018 et al. 2018 map RNA modification pseudouridine \\(\\Psi\\) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg).  Result running JACUSA2 rt-arrest processed pairwise +CMC -CMC(control) data SIIIRTMg condition presented.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_rt_arrest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JACUSA2 output for rt-arrest on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_rt_arrest","text":"","code":"data(SIIIRTMg_rt_arrest)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_rt_arrest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JACUSA2 output for rt-arrest on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_rt_arrest","text":"tibble 22 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 pvalue: Numeric value representing pvalue test. strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) arrest: Numeric tibble representing counts , C, G, T base calls arrest reads. : Numeric tibble representing counts , C, G, T base calls reads. bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site arrest_rate: Numeric tibble representing arrest rate sample. arrest_score: Numeric - test-statistic score. backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_rt_arrest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JACUSA2 output for rt-arrest on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_rt_arrest","text":"Check Section \"Reverse transcriptase arrest events\"  https://github.com/dieterich-lab/JACUSA2/blob/master/manual/manual.pdf details pre-processing mapping primary sequencing data.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMg_rt_arrest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JACUSA2 output for rt-arrest on SIIIRTMg condition in Zhou et. al 2018 data — SIIIRTMg_rt_arrest","text":"Zhou, K. .; Clark, W. C.; Pan, D. W.; Eckwahl, M. J.; Dai, Q. & Pan, T. Pseudouridines context-dependent mutation stop rates high-throughput sequencing  RNA Biology, Informa UK Limited, 2018 , 15 , 892-900","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_call2.html","id":null,"dir":"Reference","previous_headings":"","what":"JACUSA2 output for call-2 on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_call2","title":"JACUSA2 output for call-2 on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_call2","text":"Zhou2018 et al. 2018 map RNA modification pseudouridine \\(\\Psi\\) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg).  Result running JACUSA2 call-2 processed pairwise +CMC -CMC(control) data SIIIRTMn condition presented.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_call2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JACUSA2 output for call-2 on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_call2","text":"","code":"data(SIIIRTMn_call2)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_call2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JACUSA2 output for call-2 on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_call2","text":"tibble 18 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 score: Numeric value representing test-statistc. Higher values indicate divergent pileups strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_call2.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JACUSA2 output for call-2 on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_call2","text":"Check Section \"Reverse transcriptase arrest events\"  https://github.com/dieterich-lab/JACUSA2/blob/master/manual/manual.pdf details pre-processing mapping primary sequencing data.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_call2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JACUSA2 output for call-2 on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_call2","text":"Zhou, K. .; Clark, W. C.; Pan, D. W.; Eckwahl, M. J.; Dai, Q. & Pan, T. Pseudouridines context-dependent mutation stop rates high-throughput sequencing  RNA Biology, Informa UK Limited, 2018 , 15 , 892-900","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_rt_arrest.html","id":null,"dir":"Reference","previous_headings":"","what":"JACUSA2 output for rt-arrest on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_rt_arrest","title":"JACUSA2 output for rt-arrest on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_rt_arrest","text":"Zhou2018 et al. 2018 map RNA modification pseudouridine \\(\\Psi\\) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg).  Result running JACUSA2 rt-arrest processed pairwise +CMC -CMC(control) data SIIIRTMn condition presented.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_rt_arrest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"JACUSA2 output for rt-arrest on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_rt_arrest","text":"","code":"data(SIIIRTMn_rt_arrest)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_rt_arrest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"JACUSA2 output for rt-arrest on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_rt_arrest","text":"tibble 22 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 pvalue: Numeric value representing pvalue test. strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) arrest: Numeric tibble representing counts , C, G, T base calls arrest reads. : Numeric tibble representing counts , C, G, T base calls reads. bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site arrest_rate: Numeric tibble representing arrest rate sample. arrest_score: Numeric - test-statistic score. backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_rt_arrest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"JACUSA2 output for rt-arrest on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_rt_arrest","text":"Check Section \"Reverse transcriptase arrest events\"  https://github.com/dieterich-lab/JACUSA2/blob/master/manual/manual.pdf details pre-processing mapping primary sequencing data.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/SIIIRTMn_rt_arrest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"JACUSA2 output for rt-arrest on SIIIRTMn condition in Zhou et. al 2018 data — SIIIRTMn_rt_arrest","text":"Zhou, K. .; Clark, W. C.; Pan, D. W.; Eckwahl, M. J.; Dai, Q. & Pan, T. Pseudouridines context-dependent mutation stop rates high-throughput sequencing  RNA Biology, Informa UK Limited, 2018 , 15 , 892-900","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_call2.html","id":null,"dir":"Reference","previous_headings":"","what":"Combined JACUSA2 output for call-2 on all conditions in Zhou et. al 2018 data — Zhou2018_call2","title":"Combined JACUSA2 output for call-2 on all conditions in Zhou et. al 2018 data — Zhou2018_call2","text":"Zhou2018 et al. 2018 map RNA modification pseudouridine \\(\\Psi\\) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg).  combined version conditions pairwise +CMC -CMC(control) comparisons presented. data structure contains additional field \"meta_condition\" corresponds identifies  condition Zhou 2018: HIVRT, SIIIMn, SIIIMg. dataset exemplifies usefullness combining multiple pairwise comparisons make distinguishable \"meta\" field.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_call2.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combined JACUSA2 output for call-2 on all conditions in Zhou et. al 2018 data — Zhou2018_call2","text":"","code":"data(Zhou2018_call2)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_call2.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Combined JACUSA2 output for call-2 on all conditions in Zhou et. al 2018 data — Zhou2018_call2","text":"tibble 19 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 score: Numeric value representing test-statistc. Higher values indicate divergent pileups strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\". meta: Character string indicating dataset. : \"HIVRT\", \"SIIIRTMn\", \"SIIIRTMn\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_call2.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Combined JACUSA2 output for call-2 on all conditions in Zhou et. al 2018 data — Zhou2018_call2","text":"Zhou, K. .; Clark, W. C.; Pan, D. W.; Eckwahl, M. J.; Dai, Q. & Pan, T. Pseudouridines context-dependent mutation stop rates high-throughput sequencing  RNA Biology, Informa UK Limited, 2018 , 15 , 892-900","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_rt_arrest.html","id":null,"dir":"Reference","previous_headings":"","what":"Combined JACUSA2 output for rt-arrest on all conditions in Zhou et. al 2018 data — Zhou2018_rt_arrest","title":"Combined JACUSA2 output for rt-arrest on all conditions in Zhou et. al 2018 data — Zhou2018_rt_arrest","text":"Zhou2018 et al. 2018 map RNA modification pseudouridine \\(\\Psi\\) chemically modifying pseudouridines carbodiimide (+CMC) detecting arrest events induced reverse transcription stops high-throughput sequencing 3 different conditions (HIVRT, SIIIMn, SIIIMg).  combined version conditions pairwise +CMC -CMC(control) comparisons presented. data structure contains additional field \"meta_condition\" corresponds identifies  condition Zhou 2018: HIVRT, SIIIMn, SIIIMg. dataset exemplifies usefullness combining multiple pairwise comparisons make distinguishable \"meta\" field.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_rt_arrest.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Combined JACUSA2 output for rt-arrest on all conditions in Zhou et. al 2018 data — Zhou2018_rt_arrest","text":"","code":"data(Zhou2018_rt_arrest)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_rt_arrest.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Combined JACUSA2 output for rt-arrest on all conditions in Zhou et. al 2018 data — Zhou2018_rt_arrest","text":"tibble 23 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 pvalue: Numeric value representing pvalue test. strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) arrest: Numeric tibble representing counts , C, G, T base calls arrest reads. : Numeric tibble representing counts , C, G, T base calls reads. bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site arrest_rate: Numeric tibble representing arrest rate sample. arrest_score: Numeric - test-statistic score. backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\". meta: Character string indicating dataset. : \"HIVRT\", \"SIIIRTMn\", \"SIIIRTMn\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_rt_arrest.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Combined JACUSA2 output for rt-arrest on all conditions in Zhou et. al 2018 data — Zhou2018_rt_arrest","text":"Check Section \"Reverse transcriptase arrest events\"  https://github.com/dieterich-lab/JACUSA2/blob/master/manual/manual.pdf details pre-processing mapping primary sequencing data.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/Zhou2018_rt_arrest.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Combined JACUSA2 output for rt-arrest on all conditions in Zhou et. al 2018 data — Zhou2018_rt_arrest","text":"Zhou, K. .; Clark, W. C.; Pan, D. W.; Eckwahl, M. J.; Dai, Q. & Pan, T. Pseudouridines context-dependent mutation stop rates high-throughput sequencing  RNA Biology, Informa UK Limited, 2018 , 15 , 892-900","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/add_arrest_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Add arrest rate. — add_arrest_rate","title":"Add arrest rate. — add_arrest_rate","text":"Calculates adds arrest rate arrest columns.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/add_arrest_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Add arrest rate. — add_arrest_rate","text":"","code":"add_arrest_rate(result)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/add_arrest_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Add arrest rate. — add_arrest_rate","text":"result object created read_result() read_results().","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/add_arrest_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Add arrest rate. — add_arrest_rate","text":"result object arrest rate field arrest_rate added.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/arrest_rate.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate arrest rate. — arrest_rate","title":"Calculate arrest rate. — arrest_rate","text":"Calculates arrest rate arrest reads.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/arrest_rate.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate arrest rate. — arrest_rate","text":"","code":"arrest_rate(arrest_cov, through_cov)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/arrest_rate.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate arrest rate. — arrest_rate","text":"arrest_cov numeric vector read coverage exhibit read arrest. through_cov numeric vector read coverage exhibit read arrest.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/arrest_rate.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate arrest rate. — arrest_rate","text":"numeric vector arrest rates.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/arrest_rate.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate arrest rate. — arrest_rate","text":"","code":"arrest_cov <- c(10, 1, 0) through_cov <- c(0, 1, 1) str(arrest_rate(arrest_cov, through_cov)) #>  num [1:3] 1 0.5 0"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_call.html","id":null,"dir":"Reference","previous_headings":"","what":"Observed base calls. — base_call","title":"Observed base calls. — base_call","text":"Observed base calls.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_call.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Observed base calls. — base_call","text":"","code":"base_call(bases)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_call.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Observed base calls. — base_call","text":"bases tibble base call counts","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_call.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Observed base calls. — base_call","text":"vector observed base calls","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_count.html","id":null,"dir":"Reference","previous_headings":"","what":"Retrieves the total number of observed unique bases. — base_count","title":"Retrieves the total number of observed unique bases. — base_count","text":"Retrieves total number observed unique bases. ref provided, reference base considered counting, e.g.: site base '' observed reference 'T'. base_count : 1, ref provided, 2, ref provided.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_count.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Retrieves the total number of observed unique bases. — base_count","text":"","code":"base_count(bases, ref = NULL)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_count.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Retrieves the total number of observed unique bases. — base_count","text":"bases vector base calls tibble base call counts. ref vector strings reference bases","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_count.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Retrieves the total number of observed unique bases. — base_count","text":"numeric vector total number bases.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_count.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Retrieves the total number of observed unique bases. — base_count","text":"","code":"bc <- c(\"A\", \"AG\", \"C\") str(base_count(bc)) #>  int [1:3] 1 2 1  # use default observed base calls and condsider reference base ref <- c(\"A\", \"A\", \"T\") str(base_count(bc, ref)) #>  int [1:3] 1 2 2"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate base call ratios for base counts. — base_ratio","title":"Calculate base call ratios for base counts. — base_ratio","text":"Calculates base call ratios base counts.  bases expected nx4 matrix data frame.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate base call ratios for base counts. — base_ratio","text":"","code":"base_ratio(bases)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate base call ratios for base counts. — base_ratio","text":"bases nx4 matrix data frame base call counts.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate base call ratios for base counts. — base_ratio","text":"data frame base call rations bases.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate base call ratios for base counts. — base_ratio","text":"","code":"bases <- matrix(c(5, 0, 5, 0,  1, 1, 1, 1), byrow = TRUE, ncol = 4) ratio <- base_ratio(bases)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates reference base to base call (base substitution). — base_sub","title":"Calculates reference base to base call (base substitution). — base_sub","text":"Calculates formats base changes ref bc. elements ref must length 1.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates reference base to base call (base substitution). — base_sub","text":"","code":"base_sub(bases, ref)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates reference base to base call (base substitution). — base_sub","text":"bases vector base calls tibble base call counts. ref vector reference bases.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates reference base to base call (base substitution). — base_sub","text":"vector formatted base call substitutions.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/base_sub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates reference base to base call (base substitution). — base_sub","text":"","code":"bases <- c(\"AG\", \"G\", \"C\", \"G\") ref <- c(\"A\", \"A\", \"C\", \"A\") base_sub(ref, bases) #> [1] \"AG->A\"     \"G->A\"      \"no change\" \"G->A\""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/clean_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Transform read substitution. — clean_tag","title":"Transform read substitution. — clean_tag","text":"Transforms read substitution. JACUSA2 can stratify reads based  base substitutions \"-B A2G\". function transform \"A2G\" \"->G\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/clean_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Transform read substitution. — clean_tag","text":"","code":"clean_tag(subs)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/clean_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Transform read substitution. — clean_tag","text":"subs string vector read tags.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/clean_tag.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Transform read substitution. — clean_tag","text":"string vector base substitution.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/clean_tag.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Transform read substitution. — clean_tag","text":"","code":"subs <- c(\"*\", \"A2G\", \"*\") clean_tag(subs) #> [1] \"*\"    \"A->G\" \"*\""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/coverage.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate coverage for structured column. — coverage","title":"Calculate coverage for structured column. — coverage","text":"Calculate coverage structured column.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/coverage.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate coverage for structured column. — coverage","text":"","code":"coverage(bases)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/coverage.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate coverage for structured column. — coverage","text":"bases structured column bases","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/coverage.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate coverage for structured column. — coverage","text":"structure column coverages","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/create_data.html","id":null,"dir":"Reference","previous_headings":"","what":"Create data matrix for NMF — create_data","title":"Create data matrix for NMF — create_data","text":"Create data matrix JACUSA2 output object non-negative matrix factorization.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/create_data.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Create data matrix for NMF — create_data","text":"","code":"create_data(   result,   scores = c(\"score\", \"deletion_score\", \"insertion_score\"),   ref_context = \"A\",   context = 2,   rename_score = \"call2_score\",   meta_cond = TRUE )"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/create_data.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Create data matrix for NMF — create_data","text":"result JACUSA2 result object. scores Vector strings. Columns JACUSA2 result object use scores. Default: \"score\", \"insertion_score\", \"deletion_score\" ref_context reference context potential site. Default: \"\". context number nucleotides consider around potential site. Default: 2. rename_score Rename column \"score\". Default: \"call2_score\". meta_cond logical - split features based meta conditions","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/create_data.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Create data matrix for NMF — create_data","text":"Data frame","code":""},{"path":[]},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/expand_tag.html","id":null,"dir":"Reference","previous_headings":"","what":"Expand tagged reads — expand_tag","title":"Expand tagged reads — expand_tag","text":"expand tagged reads create new column called \"not_untagged_reads\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/expand_tag.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Expand tagged reads — expand_tag","text":"","code":"expand_tag(result)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/expand_tag.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Expand tagged reads — expand_tag","text":"result object created read_result() read_results().","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/extend.html","id":null,"dir":"Reference","previous_headings":"","what":"Extend site. — extend","title":"Extend site. — extend","text":"Extend site. Make sure `seqlengths` set `gr`. Otherwise, check `?GenomeInfoDb::seqlengths`.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/extend.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extend site. — extend","text":"","code":"extend(gr, left = 0, right = 0)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/extend.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extend site. — extend","text":"gr object created read_result() read_results(). left integer number nucleotides shift. right integer number nucleotides shift.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/extend.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extend site. — extend","text":"Extended region","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/fast_unpack_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Fast unpack info. — fast_unpack_info","title":"Fast unpack info. — fast_unpack_info","text":"Fast unpack info.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/fast_unpack_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Fast unpack info. — fast_unpack_info","text":"","code":"fast_unpack_info(strings, names)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/fast_unpack_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Fast unpack info. — fast_unpack_info","text":"strings Vector string unpack names Vector os strings keys unpacks","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/fast_unpack_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Fast unpack info. — fast_unpack_info","text":"List unpacked values","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/filter_artefact.html","id":null,"dir":"Reference","previous_headings":"","what":"Filters sites by artefacts. — filter_artefact","title":"Filters sites by artefacts. — filter_artefact","text":"Removes sites sites marked feature/artefact filter.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/filter_artefact.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Filters sites by artefacts. — filter_artefact","text":"","code":"filter_artefact(filter, artefacts = NULL)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/filter_artefact.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Filters sites by artefacts. — filter_artefact","text":"filter vector strings contains artefact filter information. artefacts vector characters correspond feature/artefact filters filtered, default: NULL - Filter .","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/filter_artefact.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Filters sites by artefacts. — filter_artefact","text":"vector logical.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/filter_artefact.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Filters sites by artefacts. — filter_artefact","text":"","code":"data(rdd) sum(filter_artefact(rdd$filter, c(\"D\"))) #> [1] 7894"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/gather_repl.html","id":null,"dir":"Reference","previous_headings":"","what":"Extract values from a structured column. — gather_repl","title":"Extract values from a structured column. — gather_repl","text":"Extract valeus structured column adds \"contig:start-end:strand\". usefull data used `ggplot2`.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/gather_repl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Extract values from a structured column. — gather_repl","text":"","code":"gather_repl(result, col)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/gather_repl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Extract values from a structured column. — gather_repl","text":"result JACUSA2 result object col name structured column","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/gather_repl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Extract values from a structured column. — gather_repl","text":"extracted column","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/get_info_keys.html","id":null,"dir":"Reference","previous_headings":"","what":"Get keys of info field. — get_info_keys","title":"Get keys of info field. — get_info_keys","text":"Get keys info field.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/get_info_keys.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get keys of info field. — get_info_keys","text":"","code":"get_info_keys(info)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/get_info_keys.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get keys of info field. — get_info_keys","text":"info Vector strings.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/get_info_keys.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get keys of info field. — get_info_keys","text":"returndfs vector available keys.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/get_motif.html","id":null,"dir":"Reference","previous_headings":"","what":"Get sequence — get_motif","title":"Get sequence — get_motif","text":"Get sequence `gr` `src` - respects strand information!","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/get_motif.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Get sequence — get_motif","text":"","code":"get_motif(gr, src)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/get_motif.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Get sequence — get_motif","text":"gr GRanges object. src BSgenome XStringSet object.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/get_motif.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Get sequence — get_motif","text":"Vector strings.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/id.html","id":null,"dir":"Reference","previous_headings":"","what":"Merged coordinate information — id","title":"Merged coordinate information — id","text":"Merge contig:start|start-end:strand AJCUSA2 result object","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/id.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merged coordinate information — id","text":"","code":"id(result)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/id.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merged coordinate information — id","text":"result object created read_result() read_results().","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/id.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merged coordinate information — id","text":"merged coorindates information","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/is_DRACH.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if DRACH motif. — is_DRACH","title":"Check if DRACH motif. — is_DRACH","text":"Check DRACH motif.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/is_DRACH.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if DRACH motif. — is_DRACH","text":"","code":"is_DRACH(motif)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/is_DRACH.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if DRACH motif. — is_DRACH","text":"motif vector strings.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/is_DRACH.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if DRACH motif. — is_DRACH","text":"Vector bools.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/lapply_cond.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply f to all conditions — lapply_cond","title":"Apply f to all conditions — lapply_cond","text":"Wrapper lapply","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/lapply_cond.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply f to all conditions — lapply_cond","text":"","code":"lapply_cond(x, f, ...)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/lapply_cond.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply f to all conditions — lapply_cond","text":"x tibble data per condition f function apply condition data ... parameters f","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/lapply_cond.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply f to all conditions — lapply_cond","text":"tibble","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/lapply_repl.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply f to all replicates — lapply_repl","title":"Apply f to all replicates — lapply_repl","text":"Wrapper lapply","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/lapply_repl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply f to all replicates — lapply_repl","text":"","code":"lapply_repl(x, f, ...)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/lapply_repl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply f to all replicates — lapply_repl","text":"x tibble data per condition f function apply replicate data ... parameters f","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/lapply_repl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply f to all replicates — lapply_repl","text":"tibble","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/learn_nmf.html","id":null,"dir":"Reference","previous_headings":"","what":"Estimate factorization rank from JACUSA2 output — learn_nmf","title":"Estimate factorization rank from JACUSA2 output — learn_nmf","text":"Given data matrix created `create_data()` function performs non-negative matrix factorization.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/learn_nmf.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Estimate factorization rank from JACUSA2 output — learn_nmf","text":"","code":"learn_nmf(x, nmf_args = NULL, nmf_seed = \"nndsvd\")"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/learn_nmf.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Estimate factorization rank from JACUSA2 output — learn_nmf","text":"x target data fit, .e. matrix-like object - use `create_features()` nmf_args argument forward `NMF::nmf`. @seealso NMF::nmf nmf_seed Default: \"nndsvd\". @seealso NMF::nmfSeed","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/learn_nmf.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Estimate factorization rank from JACUSA2 output — learn_nmf","text":"Depends `evaluate`: FALSE @seealso NMF::nmf, TRUE list objects.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_miclip.html","id":null,"dir":"Reference","previous_headings":"","what":"m6a predictions from 3 miCLIP experiments — m6a_miclip","title":"m6a predictions from 3 miCLIP experiments — m6a_miclip","text":"Genomic coordinates (excluding Y chromosome) m6a sites 3 experiments: Boulias et al. 2019, Koh et al. 2019, Koertel et al. 2021.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_miclip.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"m6a predictions from 3 miCLIP experiments — m6a_miclip","text":"","code":"data(m6a_miclip)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_miclip.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"m6a predictions from 3 miCLIP experiments — m6a_miclip","text":"GRanges object: experiments: Character string. Possible values, combinations : Boulias, Koh, Koertel region ref: Character string. Coordinates, format: \"chr:start-end:strand\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_miclip.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"m6a predictions from 3 miCLIP experiments — m6a_miclip","text":"Koh CWQ, Goh YT, Goh WSS. Atlas quantitative single-base-resolution n6-methyl-adenine methylomes. Nat Commun. 2019; 10:5636. https://doi.org/10.1038/s41467-019-13561-z. Boulias K, Toczydłowska-Socha D, Hawley BR, Liberman N, Takashima K, Zaccara S, Guez T, Vasseur J-J, Debart F, Aravind L, Jaffrey SR, Greer EL. Identification m, javax.xml.bind.jaxbelement@3155288a, methyltransferase pcif1 reveals location functions m, javax.xml.bind.jaxbelement@72f29a24, transcriptome. Mol Cell. 2019; 75:631–6438. https://doi.org/10.1016/j.molcel.2019.06.006. Körtel N, Rücklé C, Zhou Y, Busch , Hoch-Kraft P, Sutandy FXR, Haase J, Pradhan M, Musheev M, Ostareck D, Ostareck-Lederer , Dieterich C, Hüttelmaier S, Niehrs C, Rausch O, Dominissini D, König J, Zarnack K. Deep accurate detection m6a RNA modifications using miclip2 m6aboost machine learning. Nucleic Acids Res. 2021; 49:92. https://doi.org/10.1093/nar/gkab485.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_reduced.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_reduced","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_reduced","text":"Non-negative matrix factorization m6a predictions 3 miCLIP experiments","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_reduced.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_reduced","text":"","code":"data(m6a_nmf_results)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_reduced.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_reduced","text":"list results NMF","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_reduced.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_reduced","text":"description list items: \"estim_r\"Factorizations `x` \"nmf_matrix\"Factorization `x` `r` maximizes `estim_r$measures$silhouette.consensus` `estim_r$measures$cophenetic` \"chosen_rank\"Optimal rank \"chosen_pattern\"pattern highest score \"reduced_coef\"Reduced coefficient matrix.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_reduced.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_reduced","text":"Koh CWQ, Goh YT, Goh WSS. Atlas quantitative single-base-resolution n6-methyl-adenine methylomes. Nat Commun. 2019; 10:5636. https://doi.org/10.1038/s41467-019-13561-z. Boulias K, Toczydłowska-Socha D, Hawley BR, Liberman N, Takashima K, Zaccara S, Guez T, Vasseur J-J, Debart F, Aravind L, Jaffrey SR, Greer EL. Identification m, javax.xml.bind.jaxbelement@3155288a, methyltransferase pcif1 reveals location functions m, javax.xml.bind.jaxbelement@72f29a24, transcriptome. Mol Cell. 2019; 75:631–6438. https://doi.org/10.1016/j.molcel.2019.06.006. Körtel N, Rücklé C, Zhou Y, Busch , Hoch-Kraft P, Sutandy FXR, Haase J, Pradhan M, Musheev M, Ostareck D, Ostareck-Lederer , Dieterich C, Hüttelmaier S, Niehrs C, Rausch O, Dominissini D, König J, Zarnack K. Deep accurate detection m6a RNA modifications using miclip2 m6aboost machine learning. Nucleic Acids Res. 2021; 49:92. https://doi.org/10.1093/nar/gkab485.","code":""},{"path":[]},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_results","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_results","text":"Non-negative matrix factorization m6a predictions 3 miCLIP experiments","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_results","text":"","code":"data(m6a_nmf_results)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_results.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_results","text":"list results NMF","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_results.html","id":"details","dir":"Reference","previous_headings":"","what":"Details","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_results","text":"description list items: \"estim_r\"Factorizations `x` \"nmf_matrix\"Factorization `x` `r` maximizes `estim_r$measures$silhouette.consensus` `estim_r$measures$cophenetic` \"chosen_rank\"Optimal rank \"chosen_pattern\"pattern highest score \"reduced_coef\"Reduced coefficient matrix.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/m6a_nmf_results.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Non-negative matrix factorization on m6a predictions from 3 miCLIP experiments — m6a_nmf_results","text":"Koh CWQ, Goh YT, Goh WSS. Atlas quantitative single-base-resolution n6-methyl-adenine methylomes. Nat Commun. 2019; 10:5636. https://doi.org/10.1038/s41467-019-13561-z. Boulias K, Toczydłowska-Socha D, Hawley BR, Liberman N, Takashima K, Zaccara S, Guez T, Vasseur J-J, Debart F, Aravind L, Jaffrey SR, Greer EL. Identification m, javax.xml.bind.jaxbelement@3155288a, methyltransferase pcif1 reveals location functions m, javax.xml.bind.jaxbelement@72f29a24, transcriptome. Mol Cell. 2019; 75:631–6438. https://doi.org/10.1016/j.molcel.2019.06.006. Körtel N, Rücklé C, Zhou Y, Busch , Hoch-Kraft P, Sutandy FXR, Haase J, Pradhan M, Musheev M, Ostareck D, Ostareck-Lederer , Dieterich C, Hüttelmaier S, Niehrs C, Rausch O, Dominissini D, König J, Zarnack K. Deep accurate detection m6a RNA modifications using miclip2 m6aboost machine learning. Nucleic Acids Res. 2021; 49:92. https://doi.org/10.1093/nar/gkab485.","code":""},{"path":[]},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/mapply_repl.html","id":null,"dir":"Reference","previous_headings":"","what":"Apply f to all replicates — mapply_repl","title":"Apply f to all replicates — mapply_repl","text":"Wrapper mapply.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/mapply_repl.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Apply f to all replicates — mapply_repl","text":"","code":"mapply_repl(f, ..., MoreArgs = NULL)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/mapply_repl.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Apply f to all replicates — mapply_repl","text":"f function apply replicate data ... see mapply MoreArgs see mapply","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/mapply_repl.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Apply f to all replicates — mapply_repl","text":"tibble","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/mask_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Mask a set of base substitutions. — mask_sub","title":"Mask a set of base substitutions. — mask_sub","text":"subset possibles base substitutions interesting, remaining base substitutions can  masked. function hide remaining base substitutions renaming .","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/mask_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Mask a set of base substitutions. — mask_sub","text":"","code":"mask_sub(subs, keep)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/mask_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Mask a set of base substitutions. — mask_sub","text":"subs vector base call substitutions. keep vector base call substitutions highlighted. renamed .","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/mask_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Mask a set of base substitutions. — mask_sub","text":"vector base call substitutions. subs <- c(\"->G\", \"->C\", \"change\") # \"->G\" \"\" \"change\" mask_sub(subs, c(\"->G\")) # \"\" \"\" \"change\" mask_sub(subs, c(\"->T\"))","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/max_observed_bc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates most frequent base calls — max_observed_bc","title":"Calculates most frequent base calls — max_observed_bc","text":"Calculates frequent base call counts nx4 matrix bases. Provide ref ignore reference base call counts.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/max_observed_bc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates most frequent base calls — max_observed_bc","text":"","code":"max_observed_bc(bases, ref = NULL)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/max_observed_bc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates most frequent base calls — max_observed_bc","text":"bases matrix observed base call counts. ref vector reference bases. Default: NULL.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/max_observed_bc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates most frequent base calls — max_observed_bc","text":"vector frequent base call counts.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/max_observed_bc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates most frequent base calls — max_observed_bc","text":"","code":"bases <- matrix(c( 1,  0, 9, 0,                    5,  0, 5, 0,                    0, 10, 0, 0),                 ncol = 4, byrow = TRUE) ref <- c(\"A\", \"A\", \"C\") # show most frequent base call counts max_observed_bc(bases, ref)#' #> [1] \"G\" \"G\" \"\""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/merge_sub.html","id":null,"dir":"Reference","previous_headings":"","what":"Merges base substitutions. — merge_sub","title":"Merges base substitutions. — merge_sub","text":"Usefull, creating summaries base changes add_summary(). Merging base changes different reference bases allowed. However, base changes different non-reference bases can merged, e.g.: c(\"->G\", \"->C\") merged \"->CG\"","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/merge_sub.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Merges base substitutions. — merge_sub","text":"","code":"merge_sub(subs)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/merge_sub.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Merges base substitutions. — merge_sub","text":"subs vector base substitutions.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/merge_sub.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Merges base substitutions. — merge_sub","text":"merged base substitutions.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/merge_sub.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Merges base substitutions. — merge_sub","text":"","code":"sub <- c(\"A->G\", \"A->G\") # result: A->G merge_sub(sub) #> [1] \"A->G\" # result: A->CG sub <- c(\"A->G\", \"A->C\") merge_sub(sub) #> [1] \"A->CG\""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/non_ref_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculate non reference ratio from base counts and reference base. — non_ref_ratio","title":"Calculate non reference ratio from base counts and reference base. — non_ref_ratio","text":"Retrieves non reference ratio based ref base calls given bases.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/non_ref_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculate non reference ratio from base counts and reference base. — non_ref_ratio","text":"","code":"non_ref_ratio(bases, ref)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/non_ref_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculate non reference ratio from base counts and reference base. — non_ref_ratio","text":"bases nx4 matrix data frame base call counts. ref string vector reference bases.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/non_ref_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculate non reference ratio from base counts and reference base. — non_ref_ratio","text":"numeric vector non reference substitution ratios bases.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/non_ref_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculate non reference ratio from base counts and reference base. — non_ref_ratio","text":"","code":"ref <- c(\"A\", \"A\", \"A\") bases <- tidyr::tribble(   ~A, ~C, ~G, ~T,   10,  0,  5,  5,    0,  1,  1,  1,    1,  1,  1,  1 ) non_ref_ratio(bases, ref) #> [1] 0.50 1.00 0.75"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/observed_bc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates observed base calls — observed_bc","title":"Calculates observed base calls — observed_bc","text":"Calculates observed base call counts stored nx4 matrix bases.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/observed_bc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates observed base calls — observed_bc","text":"","code":"observed_bc(bases)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/observed_bc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates observed base calls — observed_bc","text":"bases matrix observed base call counts.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/observed_bc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates observed base calls — observed_bc","text":"vector observed base calls.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/observed_bc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates observed base calls — observed_bc","text":"","code":"bases <- matrix(c( 1,  0, 9, 0,                    5,  0, 5, 0,                    0, 10, 0, 0),                 ncol = 4, byrow = TRUE) # show observed base call counts observed_bc(bases) #> [1] \"AG\" \"AG\" \"C\""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/predict_mods.html","id":null,"dir":"Reference","previous_headings":"","what":"Predict modifications in JACUSA2 output — predict_mods","title":"Predict modifications in JACUSA2 output — predict_mods","text":"Use data matrix matrix factorization predict modification sites.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/predict_mods.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Predict modifications in JACUSA2 output — predict_mods","text":"","code":"predict_mods(x, nmf_results = NULL)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/predict_mods.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Predict modifications in JACUSA2 output — predict_mods","text":"x target data fit, .e. matrix-like object - use `create_data()`. nmf_results Default: data(m6a_nmf_results).","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/predict_mods.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Predict modifications in JACUSA2 output — predict_mods","text":"Score matrix.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rdd.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset of RDDs detected by JACUSA2 in HEK-293 untreated cells — rdd","title":"Subset of RDDs detected by JACUSA2 in HEK-293 untreated cells — rdd","text":"Subset RDDs detected JACUSA2 HEK-293 untreated cells","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rdd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset of RDDs detected by JACUSA2 in HEK-293 untreated cells — rdd","text":"","code":"data(rdd)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rdd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subset of RDDs detected by JACUSA2 in HEK-293 untreated cells — rdd","text":"tibble 18 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 score: Numeric value representing test-statistc. Higher values indicate divergent pileups strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rdd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Subset of RDDs detected by JACUSA2 in HEK-293 untreated cells — rdd","text":"Piechotta, M.; Wyler, E.; Ohler, U.; Landthaler, M. & Dieterich, C. JACUSA: site-specific identification RNA editing events replicate sequencing data  BMC Bioinformatics, Springer Nature, 2017 , 18 dataset containing subset RNA DNA differences (RDDs) identified JACUSA2 untreated HEK-293 cells.  fields follows:","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/read_result.html","id":null,"dir":"Reference","previous_headings":"","what":"Read JACUSA2 result file — read_result","title":"Read JACUSA2 result file — read_result","text":"read_result() reads data generated JACUSA2 creates JACUSA2 result object.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/read_result.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read JACUSA2 result file — read_result","text":"","code":"read_result(   file,   cond_desc = c(),   unpack = FALSE,   tmpdir = tempdir(),   showProgress = FALSE,   ... )"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/read_result.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read JACUSA2 result file — read_result","text":"file String represents file name JACUSA2 output URL. cond_desc Vector strings represent names/descriptions conditions. unpack Boolean vector fields unpacked. tmpdir String @see `data.table::fread`. showProgress Boolean @see `data.table::fread`. ... parameters forwarded `data.table::fread`.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/read_results.html","id":null,"dir":"Reference","previous_headings":"","what":"Read multiple related JACUSA2 results — read_results","title":"Read multiple related JACUSA2 results — read_results","text":"Read multiple related JACUSA2 results.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/read_results.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Read multiple related JACUSA2 results — read_results","text":"","code":"read_results(   files,   meta_conds,   cond_descs = replicate(length(files), c()),   unpack = FALSE )"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/read_results.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Read multiple related JACUSA2 results — read_results","text":"files Vector files. meta_conds Vector string vectors explain files. cond_descs Vector strings represent names/descriptions conditions. unpack Boolean indicates info column processed.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/reduce_coef.html","id":null,"dir":"Reference","previous_headings":"","what":"Reduce coefficient matrix — reduce_coef","title":"Reduce coefficient matrix — reduce_coef","text":"Reduce coefficient matrix make predictions one experiment data.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/reduce_coef.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Reduce coefficient matrix — reduce_coef","text":"","code":"reduce_coef(nmf_results, meta_conds)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/reduce_coef.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Reduce coefficient matrix — reduce_coef","text":"nmf_results object created `learn_nmf()`. meta_conds names experiments nmf_results","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/reduce_coef.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Reduce coefficient matrix — reduce_coef","text":"nmf_results modified coefficient matrix (t_h).","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rnam.html","id":null,"dir":"Reference","previous_headings":"","what":"rRNA modification map of rRNAs according to Taika et al. — rnam","title":"rRNA modification map of rRNAs according to Taika et al. — rnam","text":"Data (18S, 28S, 5.8S) extracted retrieved PMID: 30202881.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rnam.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"rRNA modification map of rRNAs according to Taika et al. — rnam","text":"","code":"data(rnam)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rnam.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"rRNA modification map of rRNAs according to Taika et al. — rnam","text":"data.frame 3 elements: rrna: String, either \"18S\", \"28S\", \"5.8S\" pos: Numeric 1-index position. base: String, reference base(, C, G, T) modification(ac4C, , Cm,          Gm, m1A, m1acp3pusU, m3U, m5C, m62A, m6A, m7G, ND, psU, psUm, Um)","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rnam.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"rRNA modification map of rRNAs according to Taika et al. — rnam","text":"Landscape complete RNA chemical modifications human 80S ribosome             Masato Taoka, Yuko Nobe, Yuka Yamaki, Ko Sato, Hideaki Ishikawa,              Keiichi Izumikawa, Yoshio Yamauchi, Kouji Hirota, Hiroshi Nakayama,              Nobuhiro Takahashi et al.              Nucleic Acids Research, Volume 46, Issue 18, 12 October 2018, Pages 9289–9298,              https://doi.org/10.1093/nar/gky811","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/robust.html","id":null,"dir":"Reference","previous_headings":"","what":"Check if data is robust — robust","title":"Check if data is robust — robust","text":"Tests values observed (>0) conditions (op = |) Supports 1 2 conditions.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/robust.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Check if data is robust — robust","text":"","code":"robust(x)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/robust.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Check if data is robust — robust","text":"x tibble numeric.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/robust.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Check if data is robust — robust","text":"logical vector indicating robust rows.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rrd.html","id":null,"dir":"Reference","previous_headings":"","what":"Subset of RRDs detected by JACUSA2 in HEK-293 ADAR KD and untreated cells — rrd","title":"Subset of RRDs detected by JACUSA2 in HEK-293 ADAR KD and untreated cells — rrd","text":"Data extrated : Piechotta, M.; Wyler, E.; Ohler, U.; Landthaler, M. & Dieterich, C. JACUSA: site-specific identification RNA editing events replicate sequencing data  BMC Bioinformatics, Springer Nature, 2017 , 18","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rrd.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Subset of RRDs detected by JACUSA2 in HEK-293 ADAR KD and untreated cells — rrd","text":"","code":"data(rrd)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rrd.html","id":"format","dir":"Reference","previous_headings":"","what":"Format","title":"Subset of RRDs detected by JACUSA2 in HEK-293 ADAR KD and untreated cells — rrd","text":"tibble 18 elements: id: Character string representing unique identifier - created contig, start, [end], strand. contig: Character string representing contig variant start: Numeric position variant (>=0) end: Numeric corresponds \"start + 1\" name: Character string. Name used method call-2 score: Numeric value representing test-statistc. Higher values indicate divergent pileups strand: Character representing strand information; \"+\", \"-\", \".\"(strand information available) bases: Numeric tibble representing counts , C, G, T base calls. cov: Numeric value indicating read coverage site backtrack1: Character - indicator backtracking used condition 1. backtrack2: Character - indicator backtracking used condition 2. backtrackP: Character - indicator backtracking used condition pooled condition. reset1: Character - indicator default estimation unstable condition 1. reset2: Character - indicator default estimation unstable condition 2. resetP: Character - indicator default estimation unstable pooled condition. info: Character string separated \";\" provding additional data specific site. Empty field equal \"*\" filter: \";\"-separated character string showing feature filter information. Empty field equal \"*\" ref: Character \"\", \"C\", \"G\", \"T\", \"N\" representing reference base site - inverted strand \"-\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/rrd.html","id":"references","dir":"Reference","previous_headings":"","what":"References","title":"Subset of RRDs detected by JACUSA2 in HEK-293 ADAR KD and untreated cells — rrd","text":"Piechotta, M.; Wyler, E.; Ohler, U.; Landthaler, M. & Dieterich, C. JACUSA: site-specific identification RNA editing events replicate sequencing data  BMC Bioinformatics, Springer Nature, 2017 , 18 dataset containing subset RNA RNA differences (RRDs) identified JACUSA2 ADAR KD untreated HEK-293 cells.  fields follows:","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_counts.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates base substitution counts — sub_counts","title":"Calculates base substitution counts — sub_counts","text":"Calculates base substitution counts ref base counts stored nx4 matrix bases. ref must one reference base. ->G okay, AG->G allowed! bc provided, count substitutions largest non-reference base  (@seealso max_observed_bc). Make sure number alleles ref(erence) bases 2 maximum.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_counts.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates base substitution counts — sub_counts","text":"","code":"sub_counts(ref, bases, bc = NULL)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_counts.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates base substitution counts — sub_counts","text":"ref vector reference bases. bases matrix observed base call counts. bc vector strings represent observed base calls. Default: NULL.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_counts.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates base substitution counts — sub_counts","text":"vector base call substitution counts.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_counts.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates base substitution counts — sub_counts","text":"","code":"ref <- c(\"A\", \"A\", \"T\") # Only one non-ref. base bases <- matrix(c( 1,  0, 9, 0,                    5,  0, 5, 0,                    0, 10, 0, 0),                 ncol = 4, byrow = TRUE) # show base substitution counts for observed base calls sub_counts(ref, bases) #> [1]  9  5 10  # > one non-ref. base bases <- matrix(c( 1,  2, 9, 1,                    5,  3, 5, 1,                    2, 10, 2, 1),                 ncol = 4, byrow = TRUE) # we are only interested in A->G, T->C bc <- c(\"G\", \"G\", \"C\") # show base substitution counts for A->G, T->C sub_counts(ref, bases, bc) #> [1]  9  5 10"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_ratio.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates base substitution ratio (e.g.: editing frequency). — sub_ratio","title":"Calculates base substitution ratio (e.g.: editing frequency). — sub_ratio","text":"Calculates base substitution ratio (e.g.: editing frequency) ref base counts stored nx4 matrix bases. ref must one reference base. ->G okay, AG->G allowed! bc provided, count substitution ratio largest non-reference base (@seealso max_observed_bc). Make sure number alleles ref(erence) bases 2 maximum.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_ratio.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates base substitution ratio (e.g.: editing frequency). — sub_ratio","text":"","code":"sub_ratio(ref, bases, bc = NULL)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_ratio.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates base substitution ratio (e.g.: editing frequency). — sub_ratio","text":"ref vector reference bases. bases matrix observed base call counts. bc vector strings represent observed base calls. Default: NULL.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_ratio.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates base substitution ratio (e.g.: editing frequency). — sub_ratio","text":"vector base call substitution ratios.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/sub_ratio.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates base substitution ratio (e.g.: editing frequency). — sub_ratio","text":"","code":"ref <- c(\"A\", \"A\", \"T\") # Only one non-ref. base bases <- matrix(c( 1,  0, 9, 0,                    5,  0, 5, 0,                    0, 10, 0, 0),                 ncol = 4, byrow = TRUE) # show base substitution ratios for observed base calls sub_ratio(ref, bases) #> [1] 0.9 0.5 1.0  # > one non-ref. base bases <- matrix(c( 1,  2, 9, 1,                    5,  3, 5, 1,                    2, 10, 2, 1),                ncol = 4, byrow = TRUE) # we are only interested in A->G, T->C bc <- c(\"G\", \"G\", \"C\") # show base substitution ratios for A->G, T->C sub_ratio(ref, bases, bc) #> [1] 0.6923077 0.3571429 0.6666667"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/unpack_info.html","id":null,"dir":"Reference","previous_headings":"","what":"Unpack info field — unpack_info","title":"Unpack info field — unpack_info","text":"Unpacks info field.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/unpack_info.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Unpack info field — unpack_info","text":"","code":"unpack_info(info, cond_count, keys = get_info_keys(info))"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/unpack_info.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Unpack info field — unpack_info","text":"info Vector stings. cond_count integer Number conditions. keys vector string keys extract \"info\".","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/unpack_info.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Unpack info field — unpack_info","text":"returns JACUSA2 result object \"info\" unpacked.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/variant_bc.html","id":null,"dir":"Reference","previous_headings":"","what":"Calculates non-reference base calls — variant_bc","title":"Calculates non-reference base calls — variant_bc","text":"Calculates non-reference base call counts vector bc  ref(ference) bases. Make sure combination base calls  reference bases <= 2 alleles.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/variant_bc.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Calculates non-reference base calls — variant_bc","text":"","code":"variant_bc(ref, bc)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/variant_bc.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Calculates non-reference base calls — variant_bc","text":"ref vector reference bases.. bc vector base calls.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/variant_bc.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Calculates non-reference base calls — variant_bc","text":"vector frequent base call counts.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/variant_bc.html","id":"ref-examples","dir":"Reference","previous_headings":"","what":"Examples","title":"Calculates non-reference base calls — variant_bc","text":"","code":"ref <- c(\"A\", \"A\") bc <- c(\"A\", \"AG\") # show non-reference base calls variant_bc(ref, bc) #> [1] \"\"  \"G\""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/write_bedGraph.html","id":null,"dir":"Reference","previous_headings":"","what":"Writes vector of values as bedGraph file. — write_bedGraph","title":"Writes vector of values as bedGraph file. — write_bedGraph","text":"Writes bedGraph conform file coordinates defined vectors: \"contig\", \"start\", \"end\". According : https://genome.ucsc.edu/goldenPath/help/bedgraph.html \"start\" \"end\" zero indexed half opened. caller needs make sure  fullfilled.","code":""},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/write_bedGraph.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Writes vector of values as bedGraph file. — write_bedGraph","text":"","code":"write_bedGraph(file, contig, start, end, value)"},{"path":"https://dieterich-lab.github.io/JACUSA2helper/reference/write_bedGraph.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Writes vector of values as bedGraph file. — write_bedGraph","text":"file String represents filename BED graph file. contig vector character string represting contig(s) start vector numericals zero indexed (>= 0) end vector numericals half opened: [start, end) value vector character strings numericals representing value(s)","code":""}]
